{"version":3,"file":"job_model_mongo.service.js","sourceRoot":"","sources":["job_model_mongo.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  models\n} from 'mongoose'\nimport {Mongo} from '../mongoqueue_model_mongo.connection'\nimport {JobSchema} from './job_model_mongo.schema'\nimport {MongooseConfiguration} from '../../mongoqueue.interface'\n\nexport class JobModelService{\n  private config: MongooseConfiguration\n  constructor(config:MongooseConfiguration)\n  {\n    this.config = config\n  }\n\n  private async getModelJob(){\n    const name = 'Job'\n    const mongoConnection = new Mongo(this.config)\n    \n    const modelName = this.config?.prefix?this.config.prefix + '-' + name:name;\n    const modelJob = models[modelName] || await mongoConnection.createModel(name, JobSchema)\n    return {modelJob}\n  }\n\n  public async getJob(id:string){\n    const {modelJob} = await this.getModelJob()\n    return await modelJob.findById(id)\n  }\n\n  public async getJobs(filter:any={}){    \n      const {modelJob} = await this.getModelJob()\n      return await modelJob.find(filter)\n  }\n\n  public async updateJob(id: string, data:any, allowNew=true){\n    const {modelJob} = await this.getModelJob()\n    return await modelJob.findByIdAndUpdate(id, data, { new: allowNew })\n  }\n\n  public async updateJobByFilter(filter: any, data:any, allowNew=true){\n    const {modelJob} = await this.getModelJob()\n    return await modelJob.findOneAndUpdate(filter, data, { new: allowNew, upsert:allowNew })\n  }\n\n  public async createJob(data:any){\n    const {modelJob} = await this.getModelJob()\n    return await modelJob.create(data)\n  }\n\n  public async removeJob(id:string){\n    if (!!id)\n    {\n        const {modelJob} = await this.getModelJob()\n        return await modelJob.findByIdAndRemove(id)\n    }\n    else\n        return false\n  }\n}"]}