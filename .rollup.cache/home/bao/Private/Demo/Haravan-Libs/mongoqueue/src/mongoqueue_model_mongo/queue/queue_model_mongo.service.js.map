{"version":3,"file":"queue_model_mongo.service.js","sourceRoot":"","sources":["queue_model_mongo.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  models\n} from 'mongoose'\nimport {Mongo} from '../mongoqueue_model_mongo.connection'\nimport {QueueSchema} from './queue_model_mongo.schema'\nimport {MongooseConfiguration} from '../../mongoqueue.interface'\n\nexport class QueueModelService{\n  private config!: MongooseConfiguration\n  constructor(config?:MongooseConfiguration)\n  {\n    if (config)\n      this.config = config\n  }\n\n  public set Config(value:MongooseConfiguration)\n  {\n    this.config = value\n  }\n\n  private async getModelQueue(){\n    const name = 'Queue'\n    const mongoConnection = new Mongo(this.config)\n    \n    const modelName = this.config?.prefix?this.config.prefix + '-' + name:name;\n    const modelQueue = models[modelName] || await mongoConnection.createModel(name, QueueSchema)\n    return {modelQueue}\n  }\n\n  public async getQueue(id:number){\n    const {modelQueue} = await this.getModelQueue()\n    return await modelQueue.findById(id)\n  }\n\n  public async getQueues(filter:any={}){    \n      const {modelQueue} = await this.getModelQueue()\n      return await modelQueue.find(filter)\n  }\n\n  public async updateQueue(id: number, data:any, allowNew=true){\n    const {modelQueue} = await this.getModelQueue()\n    return await modelQueue.findByIdAndUpdate(id, data, { new: allowNew })\n  }\n\n  public async updateQueueByFilter(filter: any, data:any, allowNew=true){\n    const {modelQueue} = await this.getModelQueue()\n    return await modelQueue.findOneAndUpdate(filter, data, { new: allowNew, upsert: allowNew })\n  }\n\n  public async createQueue(data:any){\n    const {modelQueue} = await this.getModelQueue()\n    return await modelQueue.create(data)\n  }\n\n  public async removeQueue(id:string){\n    if (!!id)\n    {\n        const {modelQueue} = await this.getModelQueue()\n        return await modelQueue.findByIdAndRemove(id)\n    }\n    else\n        return false\n  }\n}"]}